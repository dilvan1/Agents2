(EDIF LATCH327.DAT
   (status (EDIFVersion 0 9 5) (EDIFLevel 0) )
   (comment "Generated by stick program")
   (design LATCH327 (qualify libLATCH327 mainCell))
   (library libLATCH327

      (technology es2
         (numberDefinition MKS
            (scale distance 1 (e 2 -7)))
      )

      (cell NMOS
         (userData cellFunction NMOS) 
         (view maskLayout Physical 
            (interface 
               (declare input port gate) 
               (declare inout port (list source drain)) 
               (permutable source drain) 
               (portImplementation gate 
                  (figureGroup POLY (rectangle (point 16 0)  (point 24 8 ))) 
                  (figureGroup POLY (rectangle (point 16 28) (point 24 36)))
               ) 
               (portImplementation drain 
                  (figureGroup NDIFF (rectangle (point 0 13) (point 12 23)))) 
               (portImplementation source 
                  (figureGroup NDIFF (rectangle (point 28 13) (point 40 23))))
            ) 
            (contents 
               (figureGroup NDIFF (rectangle (point 0  13) (point 12 23)))
               (figureGroup NDIFF (rectangle (point 28 13) (point 40 23))) 
               (figureGroup NDIFF (rectangle (point 12 13) (point 28 23))) 
               (figureGroup POLY  (rectangle (point 16 0)  (point 24 36))) 
            ) 
         ) 
      ) 
      (cell PMOS
         (userData cellFunction PMOS) 
         (view maskLayout Physical 
            (interface 
               (declare input port gate) 
               (declare inout port (list source drain)) 
               (permutable source drain) 
               (portImplementation gate 
                  (figureGroup POLY (rectangle (point 16 0)  (point 24 8 ))) 
                  (figureGroup POLY (rectangle (point 16 28) (point 24 36))) 
               ) 
               (portImplementation drain 
                  (figureGroup PDIFF (rectangle (point 0 13) (point 12 23)))) 
               (portImplementation source 
                  (figureGroup PDIFF (rectangle (point 28 13) (point 40 23)))) 
            ) 
            (contents 
               (figureGroup PDIFF (rectangle (point 0  13) (point 12 23))) 
               (figureGroup PDIFF (rectangle (point 28 13) (point 40 23))) 
               (figureGroup PDIFF (rectangle (point 12 13) (point 28 23))) 
               (figureGroup POLY  (rectangle (point 16  0) (point 24 36))) 
            ) 
         ) 
      ) 

      (cell stdNode 
         (userData cellFunction node) 
         (view maskLayout Physical 
            (interface (declare inout port node))) 
      ) 

      (cell VSS
         (userData cellFunction pad )
         (view maskLayout Physical 
            (interface 
               (declare inout port pad) 
               (portImplementation pad 
                  (figureGroup MET1 (rectangle (point -20 0) (point 360 12)))) 
            ) 
            (contents 
                  (figureGroup MET1 (rectangle (point -20 0) (point 360 12))) 
            ) 
         ) 
      ) 
      (cell VDD
         (userData cellFunction pad )
         (view maskLayout Physical 
            (interface 
               (declare inout port pad) 
               (portImplementation pad 
                  (figureGroup MET1 (rectangle (point -20 220) (point 360 232)))) 
            ) 
            (contents 
                  (figureGroup MET1 (rectangle (point -20 220) (point 360 232))) 
            ) 
         ) 
      ) 
      (cell Q
         (userData cellFunction pad )
         (view maskLayout Physical 
            (interface 
               (declare inout port pad) 
               (portImplementation pad 
                  (figureGroup MET1 (rectangle (point 340 120) (point 360 132)))) 
            ) 
            (contents 
               (figureGroup MET1 (rectangle (point 340 120) (point 360 132))) 
            ) 
         ) 
      ) 
      (cell CLKI
         (userData cellFunction pad )
         (view maskLayout Physical 
            (interface 
               (declare inout port pad) 
               (portImplementation pad 
                  (figureGroup POLY (rectangle (point -20 246) (point 360 258)))) 
            ) 
            (contents 
                  (figureGroup POLY (rectangle (point -20 246) (point 360 258))) 
            ) 
         ) 
      ) 
      (cell CLK
         (userData cellFunction pad )
         (view maskLayout Physical 
            (interface 
               (declare inout port pad) 
               (portImplementation pad 
                  (figureGroup POLY (rectangle (point -20 -26) (point 360 -14)))) 
            ) 
            (contents 
                  (figureGroup POLY (rectangle (point -20 -26) (point 360 -14))) 
            ) 
         ) 
      ) 
      (cell D
         (userData cellFunction pad )
         (view maskLayout Physical 
            (interface 
               (declare inout port pad) 
               (portImplementation pad 
                  (figureGroup MET1 (rectangle (point -20 120) (point 0 132)))) 
            ) 
            (contents 
               (figureGroup MET1 (rectangle (point -20 120) (point 0 132))) 
            ) 
         ) 
      ) 

      (cell mainCell 
         (userData cellFunction main) 
         (view symbolic Symbolical 
            (contents 
               (instance PMOS Physical fet2 )
               (instance PMOS Physical fet8 )
               (instance NMOS Physical fet3 )
               (instance NMOS Physical fet7 )
               (instance PMOS Physical fet9 )
               (instance NMOS Physical fet0 )
               (instance NMOS Physical fet6 )
               (instance PMOS Physical fet5 )
               (instance PMOS Physical fet4 )
               (instance NMOS Physical fet1 )
               (instance stdNode Physical node10)
               (instance stdNode Physical node9)
               (instance stdNode Physical node8)
               (instance stdNode Physical node7)
               (instance stdNode Physical node6)
               (instance stdNode Physical node5)
               (instance stdNode Physical node4)
               (instance stdNode Physical node3)
               (instance stdNode Physical node2)
               (instance stdNode Physical node1)
               (instance stdNode Physical node0)
               (instance VSS Physical pad5)
               (instance VDD Physical pad4)
               (instance Q Physical pad3)
               (instance CLKI Physical pad2)
               (instance CLK Physical pad1)
               (instance D Physical pad0)
               (mustJoin (qualify node10 node) 
                  (qualify fet8 drain) (qualify fet9 source) 
               ) 
               (mustJoin (qualify node9 node) 
                  (qualify fet6 source) (qualify fet7 drain) 
               ) 
               (mustJoin (qualify node8 node) 
                  (qualify fet5 gate) (qualify fet6 gate) 
                  (qualify pad2 pad) 
               ) 
               (mustJoin (qualify node7 node) 
                  (qualify fet4 drain) (qualify fet5 drain) 
               ) 
               (mustJoin (qualify node6 node) 
                  (qualify fet2 source) (qualify fet3 source) 
                  (qualify fet7 gate) (qualify fet8 gate) 
                  (qualify pad3 pad) 
               ) 
               (mustJoin (qualify node5 node) 
                  (qualify fet2 drain) (qualify fet4 source) 
                  (qualify fet8 source) (qualify pad4 pad) 
               ) 
               (mustJoin (qualify node4 node) 
                  (qualify fet1 drain) (qualify fet3 drain) 
                  (qualify fet7 source) (qualify pad5 pad) 
               ) 
               (mustJoin (qualify node3 node) 
                  (qualify fet1 gate) (qualify fet4 gate) 
                  (qualify pad0 pad) 
               ) 
               (mustJoin (qualify node2 node) 
                  (qualify fet0 drain) (qualify fet1 source) 
               ) 
               (mustJoin (qualify node1 node) 
                  (qualify fet0 gate) (qualify fet9 gate) 
                  (qualify pad1 pad) 
               ) 
               (mustJoin (qualify node0 node) 
                  (qualify fet0 source) (qualify fet2 gate) 
                  (qualify fet3 gate) (qualify fet5 source) 
                  (qualify fet6 drain) (qualify fet9 drain) 
               ) 
            ) 
         ) 
      ) 
   ) 
)
